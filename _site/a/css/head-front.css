@media (min-width: 768px) {
  .page-front .jumbotron-wrapper {
    padding-top: 17.6rem; } }

.jumbotron-hero {
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("/a/img/clients/polylog/2019-07-19-hero.jpg?v2");
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("/a/img/clients/polylog/2019-07-19-hero.jpg?v2");
  background-repeat: no-repeat;
  background-size: auto auto; }
  @media (min-width: 768px) {
    .jumbotron-hero {
      padding-top: 16rem; } }
  @media (min-width: 1016px) {
    .jumbotron-hero {
      background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.6)), color-stop(50%, rgba(0, 0, 0, 0.18)), color-stop(65%, rgba(0, 0, 0, 0.09)), color-stop(75.5%, rgba(0, 0, 0, 0.045)), color-stop(82.85%, rgba(0, 0, 0, 0.0222)), color-stop(88%, rgba(0, 0, 0, 0.0114)), to(rgba(0, 0, 0, 0))), url("/a/img/clients/polylog/2019-07-19-hero-lg.jpg?v2");
      background-image: linear-gradient(rgba(0, 0, 0, 0.6) 0%, rgba(0, 0, 0, 0.18) 50%, rgba(0, 0, 0, 0.09) 65%, rgba(0, 0, 0, 0.045) 75.5%, rgba(0, 0, 0, 0.0222) 82.85%, rgba(0, 0, 0, 0.0114) 88%, rgba(0, 0, 0, 0) 100%), url("/a/img/clients/polylog/2019-07-19-hero-lg.jpg?v2");
      background-position: center top;
      background-size: 100% 160px, auto auto; } }

@media (min-width: 1016px) {
  .jumbotron-eyebrow,
  .jumbotron-eyebrow:hover,
  .jumbotron-eyebrow:focus {
    color: #fff; } }

.jumbotron-hero::after {
  display: none; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvc2Nzcy9taXhpbnMvX2JyZWFrcG9pbnRzLnNjc3MiLCJoZWFkLWZyb250LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0RJO0VDbERKO0lBR0ksb0JBQW9CLEVBQUEsRUFFdkI7O0FBRUQ7RUFFRSx5S0FJbUU7RUFKbkUsK0hBSW1FO0VBQ25FLDRCQUE0QjtFQUM1QiwwQkFBMEIsRUFBQTtFRG1DeEI7SUMzQ0o7TUFZSSxrQkFBa0IsRUFBQSxFQXFCckI7RURVRztJQzNDSjtNQWtCSSxrWEFTc0U7TUFUdEUsK1FBU3NFO01BRXRFLCtCQUErQjtNQUUvQixzQ0FBc0MsRUFBQSxFQUV6Qzs7QURVRztFQ1BGOzs7SUFHRSxXQUFXLEVBQUEsRUFFWjs7QUFRSDtFQUNFLGFBQWEsRUFBQSIsImZpbGUiOiJoZWFkLWZyb250LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEJyZWFrcG9pbnQgdmlld3BvcnQgc2l6ZXMgYW5kIG1lZGlhIHF1ZXJpZXMuXG4vL1xuLy8gQnJlYWtwb2ludHMgYXJlIGRlZmluZWQgYXMgYSBtYXAgb2YgKG5hbWU6IG1pbmltdW0gd2lkdGgpLCBvcmRlciBmcm9tIHNtYWxsIHRvIGxhcmdlOlxuLy9cbi8vICAgICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgpXG4vL1xuLy8gVGhlIG1hcCBkZWZpbmVkIGluIHRoZSBgJGdyaWQtYnJlYWtwb2ludHNgIGdsb2JhbCB2YXJpYWJsZSBpcyB1c2VkIGFzIHRoZSBgJGJyZWFrcG9pbnRzYCBhcmd1bWVudCBieSBkZWZhdWx0LlxuXG4vLyBOYW1lIG9mIHRoZSBuZXh0IGJyZWFrcG9pbnQsIG9yIG51bGwgZm9yIHRoZSBsYXN0IGJyZWFrcG9pbnQuXG4vL1xuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtKVxuLy8gICAgbWRcbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cbi8vIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCkpXG4vLyAgICA1NzZweFxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAkbmFtZSk7XG4gIEByZXR1cm4gaWYoJG1pbiAhPSAwLCAkbWluLCBudWxsKTtcbn1cblxuLy8gTWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBOdWxsIGZvciB0aGUgbGFyZ2VzdCAobGFzdCkgYnJlYWtwb2ludC5cbi8vIFRoZSBtYXhpbXVtIHZhbHVlIGlzIGNhbGN1bGF0ZWQgYXMgdGhlIG1pbmltdW0gb2YgdGhlIG5leHQgb25lIGxlc3MgMC4xLlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4KSlcbi8vICAgIDc2N3B4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG5leHQ6IGJyZWFrcG9pbnQtbmV4dCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcbiAgQHJldHVybiBpZigkbmV4dCwgYnJlYWtwb2ludC1taW4oJG5leHQsICRicmVha3BvaW50cykgLSAxcHgsIG51bGwpO1xufVxuXG4vLyBSZXR1cm5zIGEgYmxhbmsgc3RyaW5nIGlmIHNtYWxsZXN0IGJyZWFrcG9pbnQsIG90aGVyd2lzZSByZXR1cm5zIHRoZSBuYW1lIHdpdGggYSBkYXNoIGluZnJvbnQuXG4vLyBVc2VmdWwgZm9yIG1ha2luZyByZXNwb25zaXZlIHV0aWxpdGllcy5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHhzLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4KSlcbi8vICAgIFwiXCIgIChSZXR1cm5zIGEgYmxhbmsgc3RyaW5nKVxuLy8gICAgPj4gYnJlYWtwb2ludC1pbmZpeChzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCkpXG4vLyAgICBcIi1zbVwiXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1pbmZpeCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICBAcmV0dXJuIGlmKGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpID09IG51bGwsIFwiXCIsIFwiLSN7JG5hbWV9XCIpO1xufVxuXG4vLyBNZWRpYSBvZiBhdCBsZWFzdCB0aGUgbWluaW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgdG8gdGhlIGdpdmVuIGJyZWFrcG9pbnQgYW5kIHdpZGVyLlxuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtdXAoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWluIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogJG1pbikge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSBvZiBhdCBtb3N0IHRoZSBtYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE5vIHF1ZXJ5IGZvciB0aGUgbGFyZ2VzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1heDogYnJlYWtwb2ludC1tYXgoJG5hbWUsICRicmVha3BvaW50cyk7XG4gIEBpZiAkbWF4IHtcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAY29udGVudDtcbiAgfVxufVxuXG4vLyBNZWRpYSB0aGF0IHNwYW5zIG11bHRpcGxlIGJyZWFrcG9pbnQgd2lkdGhzLlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IGJldHdlZW4gdGhlIG1pbiBhbmQgbWF4IGJyZWFrcG9pbnRzXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1iZXR3ZWVuKCRsb3dlciwgJHVwcGVyLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoJGxvd2VyLCAkYnJlYWtwb2ludHMpIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJHVwcGVyLCAkYnJlYWtwb2ludHMpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxufVxuXG4vLyBNZWRpYSBiZXR3ZWVuIHRoZSBicmVha3BvaW50J3MgbWluaW11bSBhbmQgbWF4aW11bSB3aWR0aHMuXG4vLyBObyBtaW5pbXVtIGZvciB0aGUgc21hbGxlc3QgYnJlYWtwb2ludCwgYW5kIG5vIG1heGltdW0gZm9yIHRoZSBsYXJnZXN0IG9uZS5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBvbmx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50LCBub3Qgdmlld3BvcnRzIGFueSB3aWRlciBvciBuYXJyb3dlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LW9ubHkoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1iZXR3ZWVuKCRuYW1lLCAkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi8vIEJvb3RzdHJhcCBhbmQgcGx1Z2lucyBzdHlsZXNcbkBpbXBvcnQgJy4vc3JjL2Jhc2UvdmFyaWFibGVzJztcbkBpbXBvcnQgJy4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9zY3NzL3ZhcmlhYmxlcyc7XG5AaW1wb3J0ICcuL25vZGVfbW9kdWxlcy9ib290c3RyYXAvc2Nzcy9taXhpbnMnO1xuXG5cbi5wYWdlLWZyb250IC5qdW1ib3Ryb24td3JhcHBlciB7XG4gIC8vIHZlcnRpY2FsIG9mZnNldCBmb3IgdGV4dCBibG9ja1xuICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG4gICAgcGFkZGluZy10b3A6IDE3LjZyZW07XG4gIH1cbn1cblxuLmp1bWJvdHJvbi1oZXJvIHtcbiAgLy8gcHJldHRpZXItaWdub3JlXG4gIGJhY2tncm91bmQtaW1hZ2U6XG4gICAgbGluZWFyLWdyYWRpZW50KFxuICAgICAgcmdiYSgwLCAwLCAwLCAuNSksXG4gICAgICByZ2JhKDAsIDAsIDAsIC41KSksXG4gICAgdXJsKCcjeyRzaXRlLWFzc2V0c30vaW1nL2NsaWVudHMvcG9seWxvZy8yMDE5LTA3LTE5LWhlcm8uanBnP3YyJyk7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtc2l6ZTogYXV0byBhdXRvO1xuXG4gIEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcbiAgICAvLyB2ZXJ0aWNhbCBvZmZzZXQgZm9yIHRleHQgYmxvY2tcbiAgICBwYWRkaW5nLXRvcDogMTZyZW07XG4gIH1cblxuICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKGxnKSB7XG4gICAgLy8gc3R5bGVsaW50LWRpc2FibGUgaW5kZW50YXRpb25cbiAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICBiYWNrZ3JvdW5kLWltYWdlOlxuICAgIGxpbmVhci1ncmFkaWVudChcbiAgICAgIHJnYmEoMCwgMCwgMCwgLjYpIDAlLFxuICAgICAgcmdiYSgwLCAwLCAwLCAuMTgpIDUwJSxcbiAgICAgIHJnYmEoMCwgMCwgMCwgLjA5KSA2NSUsXG4gICAgICByZ2JhKDAsIDAsIDAsIC4wNDUpIDc1LjUlLFxuICAgICAgcmdiYSgwLCAwLCAwLCAuMDIyMikgODIuODUlLFxuICAgICAgcmdiYSgwLCAwLCAwLCAuMDExNCkgODglLFxuICAgICAgcmdiYSgwLCAwLCAwLCAwKSAxMDAlKSxcbiAgICAgIHVybCgnI3skc2l0ZS1hc3NldHN9L2ltZy9jbGllbnRzL3BvbHlsb2cvMjAxOS0wNy0xOS1oZXJvLWxnLmpwZz92MicpO1xuICAgIC8vIHN0eWxlbGludC1lbmFibGUgaW5kZW50YXRpb25cbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgdG9wO1xuICAgIC8vINChINCy0LXRgNGF0L3QtdC5INGI0YLQvtGA0LrQvtC5XG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDE2MHB4LCBhdXRvIGF1dG87XG4gIH1cbn1cblxuQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuICAuanVtYm90cm9uLWV5ZWJyb3csXG4gIC5qdW1ib3Ryb24tZXllYnJvdzpob3ZlcixcbiAgLmp1bWJvdHJvbi1leWVicm93OmZvY3VzIHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICAvLyB0ZXh0LXNoYWRvdzogMCAxcHggMCBoc2xhKDAsIDAlLCAxMDAlLCAuOCk7XG4gIH1cblxuICAvLyAuanVtYm90cm9uLWhlYWRsaW5lLFxuICAvLyAuanVtYm90cm9uLXN1bW1hcnkge1xuICAvLyAgIGNvbG9yOiBoc2xhKDAsIDAlLCAwJSwgLjcpO1xuICAvLyB9XG59XG5cbi5qdW1ib3Ryb24taGVybzo6YWZ0ZXIge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4iXX0= */
