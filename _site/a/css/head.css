.jumbotron.base {
  background-color: #121a44;
  background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("/a/img/clients/polylog/2019-07-19-hero.jpg?v2");
  background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("/a/img/clients/polylog/2019-07-19-hero.jpg?v2");
  background-repeat: no-repeat;
  background-size: auto auto; }
  @media (min-width: 768px) {
    .jumbotron.base {
      padding-top: 16rem; } }
  @media (min-width: 1016px) {
    .jumbotron.base {
      background-color: #fefaf6;
      background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.6)), color-stop(50%, rgba(0, 0, 0, 0.18)), color-stop(65%, rgba(0, 0, 0, 0.09)), color-stop(75.5%, rgba(0, 0, 0, 0.045)), color-stop(82.85%, rgba(0, 0, 0, 0.0222)), color-stop(88%, rgba(0, 0, 0, 0.0114)), to(rgba(0, 0, 0, 0))), url("/a/img/clients/polylog/2019-07-19-hero-lg.jpg?v2");
      background-image: linear-gradient(rgba(0, 0, 0, 0.6) 0%, rgba(0, 0, 0, 0.18) 50%, rgba(0, 0, 0, 0.09) 65%, rgba(0, 0, 0, 0.045) 75.5%, rgba(0, 0, 0, 0.0222) 82.85%, rgba(0, 0, 0, 0.0114) 88%, rgba(0, 0, 0, 0) 100%), url("/a/img/clients/polylog/2019-07-19-hero-lg.jpg?v2");
      background-position: center top;
      background-size: 100% 160px, auto auto; } }

@media (min-width: 1016px) {
  .jumbotron-body {
    padding-top: 0; }
  .jumbotron-eyebrow,
  .jumbotron-eyebrow:hover,
  .jumbotron-eyebrow:focus {
    color: #fff; } }

.section.is-photos {
  margin-top: 3.6rem;
  padding-top: 0;
  padding-bottom: .6rem;
  position: relative; }
  @media (min-width: 768px) {
    .section.is-photos {
      margin-top: -12rem; } }

.vr .section.is-intro .blockquote {
  margin-top: 1.4rem; }

.section.is-scientific,
.section.is-practical,
.section.is-business {
  padding-bottom: .6rem; }

@media (min-width: 1016px) {
  .section.is-exhibition {
    padding-bottom: 5.4rem; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
